name: Deploy to Kubernetes

on:
  workflow_run:
    workflows: ["Publish Docker Image"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch tags
        run: git fetch --depth=1 --tags

      - name: Get latest tag or set default
        id: latest_tag
        run: |
          TAG=$(git tag -l --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          if [ -z "$TAG" ]; then
            TAG="latest"
          fi
          echo "::set-output name=tag::$TAG"

      - name: Configure kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Create and Apply Kubernetes Secrets
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          SSL_CERTIFICATE: ${{ secrets.SSL_CERTIFICATE }}
          SSL_KEY: ${{ secrets.SSL_KEY }}
        run: |
          kubectl create secret generic phrinifluent-db-secrets \
            --from-literal=POSTGRES_USER="$DB_USER" \
            --from-literal=POSTGRES_PASSWORD="$DB_PASSWORD" \
            --from-literal=POSTGRES_DB="$DB_NAME" \
            -o yaml --dry-run=client | kubectl apply -f -
          kubectl create secret generic phrinifluent-backend-secrets \
            --from-literal=SECRET_KEY="$SECRET_KEY" \
            --from-literal=ADMIN_USERNAME="$ADMIN_USERNAME" \
            --from-literal=ADMIN_EMAIL="$ADMIN_EMAIL" \
            --from-literal=ADMIN_PASSWORD="$ADMIN_PASSWORD" \
            --from-literal=SSL_CERTIFICATE="$SSL_CERTIFICATE" \
            --from-literal=SSL_KEY="$SSL_KEY" \
            -o yaml --dry-run=client | kubectl apply -f -
          echo "$SSL_CERTIFICATE" > cert.pem
          echo "$SSL_KEY" > key.pem
          kubectl create secret tls phrinifluent-tls-secrets \
            --cert=cert.pem \
            --key=key.pem \
            -o yaml --dry-run=client | kubectl apply -f -

      - name: Update image tags in Kubernetes manifests
        run: |
          TAG="${{ steps.latest_tag.outputs.tag }}"
          sed -i "s|flagro/phrinifluent_web:latest|flagro/phrinifluent_web:$TAG|g" ./k8s/web/deployment.yml
          sed -i "s|flagro/phrinifluent_web:latest|flagro/phrinifluent_web:$TAG|g" ./k8s/jobs/collectstatic.yml
          sed -i "s|flagro/phrinifluent_web:latest|flagro/phrinifluent_web:$TAG|g" ./k8s/jobs/createadmin.yml
          sed -i "s|flagro/phrinifluent_web:latest|flagro/phrinifluent_web:$TAG|g" ./k8s/jobs/migrate.yml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ./k8s/db/
          kubectl apply -f ./k8s/ingress/
          kubectl apply -f ./k8s/jobs/
          kubectl apply -f ./k8s/web/
